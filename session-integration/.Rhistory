knitr::opts_chunk$set(echo = TRUE)
suppressMessages(require(scater))
suppressMessages(require(Seurat))
suppressMessages(require(cowplot))
suppressMessages(require(scater))
suppressMessages(require(scran))
#load expression matrix
deng<-read_rds("session_clustering_files/deng.rds")
#load expression matrix
deng<-readRDS("session_clustering_files/deng.rds")
#load expression matrix
deng<-readRDS("session_clustering_files/deng.rds")
suppressMessages(require(SingleCellExperiment))
#load expression matrix
deng<-read_rds("session_clustering_files/deng.rds")
#load expression matrix
deng<-readRDS("session_clustering_files/deng-reads.rds")
#load expression matrix
deng<-readRDS("session-clustering_files/deng-reads.rds")
#look at the cell type annotation
table(colData(deng)$cell_type2)
#load expression matrix
deng<-readRDS("session-clustering_files/deng-reads.rds")
deng
deng
#Calculate gene mean across cell
gene_mean <- rowMeans(counts(deng))
#Calculate gene variance across cell
gene_var  <- rowVars(counts(deng))
#ggplot plot
gene_stat_df <- tibble(gene_mean,gene_var)
suppressMessages(require(tidyverse))
install.packages("tidyverse")
suppressMessages(require(tidyverse))
#ggplot plot
gene_stat_df <- tibble(gene_mean,gene_var)
ggplot(data=gene_stat_df ,aes(x=log(gene_mean), y=log(gene_var))) + geom_point(size=0.5)  + theme_classic()
abundant_genes <- gene_mean >= 0.5 #Remove Low abundance genes
# plot low abundance gene filtering
hist(log10(gene_mean), breaks=100, main="", col="grey80",
xlab=expression(Log[10]~"average count"))
abline(v=log10(0.5), col="red", lwd=2, lty=2)
abundant_genes <- gene_mean >= 0.5 #Remove Low abundance genes
# plot low abundance gene filtering
hist(log10(gene_mean), breaks=100, main="", col="grey80",
xlab=expression(Log[10]~"average count"))
abline(v=log10(0.5), col="red", lwd=2, lty=2)
#remove low abundance gene in SingleCellExperiment Object
deng <- deng[abundant_genes,]
dim(deng_sce)
dim(deng)
#Calculate the number of non zero expression for each genes
numcells <- nexprs(deng, byrow=TRUE)
#Filter genes detected in less than 5 cells
numcells2 <- numcells >= 5
2 <- numcells >= 5
#Filter genes detected in less than 5 cells
numcells2 <- numcells >= 5
deng <- deng[numcells2,]
deng <- deng[numcells2,]
deng <- deng[numcells2,]
#Calculate the number of non zero expression for each genes
numcells <- nexprs(deng, byrow=TRUE)
#Filter genes detected in less than 5 cells
numcells2 <- numcells >= 5
deng <- deng[numcells2,]
dim(deng)
# Model the technical coefficient of variation as a function of the mean.
out <- technicalCV2(deng, spike.type=NA, assay.type= "counts")
suppressMessages(require(scran))
install.packages("BiocManager")
BiocManager::install("edgeR")
suppressMessages(require(edgeR))
